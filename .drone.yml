---
# check update and trigger incremental update
kind: pipeline
type: docker
name: check_package_update
trigger:
  event:
  - cron
  cron:
  - check_packages_update

steps:
- name: check_new_version
  image: archlinux
  commands:
  - pacman -Syy --noconfirm --needed git jq
  - git config --global user.email "bot@ci"
  - git config --global user.name "BotCI"
    # * Check if a new version is available
    # * Create a file tag if true to only build if updated
    # * Update pkgver with latest version
  - |
    for tag in $(find ./* -type f -name "ENV_CI")
    do
      echo "Checking $tag..."
      pkg_dir=$(dirname $tag)
      pkg_name=$(basename $pkg_dir)
      latest=$(bash ./check_latest_version.sh "$pkg_dir/ENV_CI")
      current=$(grep "pkgver=" "$pkg_dir/PKGBUILD" | cut -d'=' -f2 )
      if [[ "$latest" != "$current" ]]
      then
        echo "New version found !"
        echo "$latest" > "$pkg_dir/new_version_tag"
        sed -i "s#^pkgver.*#pkgver=$latest#" "$pkg_dir/PKGBUILD"
        git add "$pkg_dir/PKGBUILD"
        git add  "$pkg_dir/new_version_tag"
        echo " * Bump $pkg_name version from $current to $latest" >> commit_msg
      fi
    done
  - |
    if [[ -f commit_msg ]]
    then
      git commit -F commit_msg
    else
      echo "No Update, nothing to commit !"
      exit 0
    fi

- name: commit_update
  image: appleboy/drone-git-push
  settings:
    ssh_key:
      from_secret: CI_SSH_KEY
    author_name: BotCI
    author_email: bot@ci
    branch: master
    remote: git@github.com:zaggash/archlinux-aur.git
    commit: false
    force: false

- name: notify_telegram
  image: appleboy/drone-telegram
  settings:
    token:
      from_secret: TELEGRAM_TOKEN
    to:
      from_secret: TELEGRAM_GROUPID
    format: markdown
    message: >
      {{#success build.status}}
        Triggered Incremental Repo update - success.
      {{else}}
        Triggered Incremental Repo update - failure.
      {{/success}}
  when:
    status:
    - success
    - failure

---
# Cron pipeline to force full rebuild.
kind: pipeline
type: docker
name: rebuild_full_repo

trigger:
  event:
  - cron
  cron:
  - rebuild_full_repo

steps:
- name: trigger_build
  image: appleboy/drone-git-push
  settings:
    ssh_key:
      from_secret: CI_SSH_KEY
    author_name: BotCI_full
    author_email: bot@ci
    branch: master
    remote: git@github.com:zaggash/archlinux-aur.git
    commit: true
    empty_commit: true
    commit_message: "Trigger full repo build [bot]"
    force: false

- name: notify_telegram
  image: appleboy/drone-telegram
  settings:
    token:
      from_secret: TELEGRAM_TOKEN
    to:
      from_secret: TELEGRAM_GROUPID
    format: markdown
    message: >
      {{#success build.status}}
        Triggered Full Repo build - success.
      {{else}}
        Triggered Full Repo build - failure.
      {{/success}}
  when:
    status:
    - success
    - failure

---
# Rebuild all pkgs by default.
# Incremental pkg build if "BotCI" push.
kind: pipeline
type: docker
name: repo_builder

trigger:
  event:
  - push

volumes:
- name: repo
  temp: {}
- name: dockersock
  temp: {}

services:
- name: docker
  image: docker:dind
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run

steps:
- name: build_packages
  image: docker:dind
  volumes:
  - name: dockersock
    path: /var/run
  environment:
    PGP_KEY:
      from_secret: PGP_KEY
  commands:
    # Give time to docker service to start
  - sleep 10s
    # Build packages
    # if Author is "BotCI" then only build pkg with "new_version_tag"
  - |
    TAG="PKGBUILD"
    [[ "$DRONE_COMMIT_AUTHOR_NAME" == "BotCI" ]] && TAG="new_version_tag"
    for pkg in $(find ./* -type f -name "$TAG")
    do
      cd $(dirname $pkg)
      docker run -e EXPORT_PKG=true -e CHECKSUM_SRC=true -e PGPKEY="$PGP_KEY" -v "$(pwd):/pkg" zaggash/arch-makepkg
      cd ..
    done

- name: move_packages
  image: archlinux
  volumes:
  - name: repo
    path: /repo/x86_64
  commands:
    # Move build packages
  - |
    for pkg in $(find ./* -type f -name "*.pkg.tar.*")
    do
      mv "$pkg" "/repo/x86_64/"
    done

- name: generate_repo_db
  image: archlinux
  volumes:
  - name: repo
    path: /repo/x86_64
  environment:
    PGP_KEY:
      from_secret: PGP_KEY
  commands:
    # if incremental build, download existing repo db
  - |
    [[ "$DRONE_COMMIT_AUTHOR_NAME" == "BotCI" ]] &&\
      curl -sL https://zaggarch-repo.sourceforge.io/x86_64/zaggarch-repo.db \
      -o /repo/x86_64/zaggarch-repo.db.tar.gz
  - echo "$PGP_KEY" | base64 -d | gpg --import
  - cd /repo
  - repo-add --sign x86_64/zaggarch-repo.db.tar.gz x86_64/*.pkg.tar.xz
  - find ./ -type l -delete
  - mv x86_64/zaggarch-repo.db.tar.gz x86_64/zaggarch-repo.db
  - mv x86_64/zaggarch-repo.db.tar.gz.sig x86_64/zaggarch-repo.db.sig
  - mv x86_64/zaggarch-repo.files.tar.gz x86_64/zaggarch-repo.files
  - mv x86_64/zaggarch-repo.files.tar.gz.sig x86_64/zaggarch-repo.files.sig

- name: sync_repo
  image: archlinux
  volumes:
  - name: repo
    path: /repo/x86_64
  environment:
    SSH_KEY:
      from_secret: SOURCEFORGE_SSH_KEY
  commands:
  - current_dir=$(pwd)
  - cd $HOME
  - |
    pacman -Syy --noconfirm --needed \
      openssh \
      rsync
  - mkdir -p ~/.ssh -m 700
  - echo "web.sourceforge.net,216.105.38.21 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCwsY6sZT4MTTkHfpRzYjxG7mnXrGL74RCT2cO/NFvRrZVNB5XNwKNn7G5fHbYLdJ6UzpURDRae1eMg92JG0+yo=" > ~/.ssh/known_hosts
  - echo "$SSH_KEY" > ~/.ssh/key
  - chmod 600 ~/.ssh/key
  - eval $(ssh-agent)
  - ssh-add ~/.ssh/key
  - cd $current_dir
    # if the commit come from "BotCI"
    #  * only build pkg where "new_version_tag"
    #  * remove existing previous pkgs versions AND rsync
  - |
    if [[ "$DRONE_COMMIT_AUTHOR_NAME" == "BotCI" ]]
    then
      for tag in $(find ./* -type f -name "new_version_tag")
      do
        pkg=$(basename $(dirname $tag))
        [[ -n $pkg ]] || exit 1
        echo "rm /home/project-web/zaggarch-repo/htdocs/x86_64/$pkg*" |\
          sftp -o StrictHostKeyChecking=yes zaggash@web.sourceforge.net
        rm -f $tag
      done
      OPTIONS="-avhP -I" 
    else
      OPTIONS="-avhP -I --delete"
    fi
    eval "rsync -e 'ssh -o StrictHostKeyChecking=yes' \
      $OPTIONS \
      /repo/x86_64 zaggash@web.sourceforge.net:/home/project-web/zaggarch-repo/htdocs/"

- name: commit_remove-tag
  image: appleboy/drone-git-push
  settings:
    ssh_key:
      from_secret: CI_SSH_KEY
    author_name: BotCI
    author_email: bot@ci
    branch: master
    remote: git@github.com:zaggash/archlinux-aur.git
    commit: true
    commit_message: "Purge new_version_tag [bot][skip ci]"
    force: false

- name: notify_telegram
  image: appleboy/drone-telegram
  settings:
    token:
      from_secret: TELEGRAM_TOKEN
    to:
      from_secret: TELEGRAM_GROUPID
    format: markdown
    message: >
      {{#success build.status}}
        Arch Repo Update - success.
      {{else}}
        Arch Repo Update - failure.
      {{/success}}
  when:
    status:
    - success
    - failure
